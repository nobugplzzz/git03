<?xml version="1.0" encoding="UTF8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kuang.mapper.TeacherMapper">

    <!--结果嵌套，联表查询-->
    <select id="getTeacher" resultMap="TeacherStudent">
        SELECT s.id sid, s.name sname, t.name tname,t.id tid
        FROM student s,teacher t
        WHERE s.tid=t.id AND t.id=#{id}
    </select>

    <resultMap id="TeacherStudent" type="teacher">
        <id property="id" column="tid"/>
        <result property="name" column="tname"/>
        <!--
        复杂的属性，我们需要单独处理 对象： association 集合： collection
        javaType="" 指定属性的类型！
        集合中的泛型信息，我们使用ofType获取
        -->
        <collection property="students" ofType="Student">
            <id property="id" column="sid"/>
            <result property="name" column="sname"/>
            <result property="tid" column="tid"/>
        </collection>
    </resultMap>

    <!--查询嵌套，子查询-->
    <select id="getTeacher2" resultMap="TeacherStudent2">
        SELECT *
        FROM teacher
        WHERE id = #{tid}
    </select>

    <resultMap id="TeacherStudent2" type="Teacher">

        <!--为什么是column="id"呢?首先id是Teacher的id,因为嵌套的select选择的是根据studen表的tid查询,tid就是Teacher的id-->
        <collection property="students" javaType="ArrayList" ofType="Student" select="getStudentByTeacherId" column="id"/>

    </resultMap>
    <select id="getStudentByTeacherId" resultType="Student">
        SELECT *
        FROM student
        WHERE tid=#{tid}
    </select>


</mapper>